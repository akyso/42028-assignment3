# Usage: python app.py
import os
import time
import uuid
import json
import io
from io import BytesIO
import base64

import requests
from flask import Flask, render_template, request, redirect, url_for, send_from_directory, jsonify
from werkzeug import SharedDataMiddleware, secure_filename
import urllib.request
from urllib.request import Request, urlopen

import numpy as np
import tensorflow as tf
import tensorflow.keras as keras
import pickle

from predict.predict import predict

from settings import ANSWERS_IDX, MODEL_FOLDER, MODEL_FILE, IMG_MODEL_FILE, TOKENIZER_FILE


UPLOAD_FOLDER = 'uploads'
ALLOWED_EXTENSIONS = set(['jpg', 'jpeg'])


def get_as_base64(url):
    return base64.b64encode(requests.get(url).content)


def allowed_file(filename):
    return '.' in filename and \
           filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS


app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER
app.config['IMAGE_URL'] = '../uploads/template.jpg'

@app.route("/")
def template_test():
    return render_template('index.html', imagesource='', question='', anwer='')


@app.route('/upload_image', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        start_time = time.time()
        file = request.files['file']

        if file and allowed_file(file.filename):
            filename = secure_filename(file.filename)

            file_path = os.path.join(app.config['UPLOAD_FOLDER'], filename)
            file.save(file_path)

            #print(file_path)
            app.config['IMAGE_URL'] = file_path

            return render_template('index.html', imagesource=app.config['IMAGE_URL'], question='', anwer='')


@app.route('/ask_question', methods=['POST'])
def my_form_post():
    text = request.form['textbox']
    question = text.capitalize()
    #print(question)

    preds = predict(app.config['IMAGE_URL'], question) #, IMAGE_MODEL, VQA_MODEL, TOKENIZER

    #print(preds)
    label = preds#[0][0]
    return render_template('index.html', imagesource=app.config['IMAGE_URL'], question=question, answer=label)


@app.route('/uploads/<filename>')
def uploaded_file(filename):
    return send_from_directory(app.config['UPLOAD_FOLDER'],
                               filename)


app.add_url_rule('/uploads/<filename>', 'uploaded_file',
                 build_only=True)
app.wsgi_app = SharedDataMiddleware(app.wsgi_app, {
    '/uploads': app.config['UPLOAD_FOLDER']
})


if __name__ == "__main__":
    app.debug = False
    app.run(host='0.0.0.0', port=3000)
